networks:
  business-intelligence-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
## --------------------------------------------- JUPYTER SECTION --------------------------------------------
  datascience-notebook:
    build: ./jupyter/.
    image: cstone157/jupyter_datascience
    volumes:
      - ./jupyter:/home/jovyan/work
    ports:
      - 3000:8888
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"
    container_name: bi-jupyter-container
    networks:
      - business-intelligence-net
## ------------------------------------------- END JUPYTER SECTION ------------------------------------------

## --------------------------------------------- POSTGRES SECTION ---------------------------------------------
  # Database Container (postgres)
  postgres:
    container_name: pg_container
    build: ./postgres
    image: cstone157/pg_container
    restart: always
    environment:
      POSTGRES_USER: shoc
      POSTGRES_PASSWORD: JustKeepSwimming
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - business-intelligence-net

  # Container of PGAdmin (web-based admin tool for postgres database)
  pgadmin:
    container_name: pg_admin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: shoc@shoc.us
      PGADMIN_DEFAULT_PASSWORD: JustKeepSwimming
    ports:
      - "3001:80"
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    networks:
      - business-intelligence-net
## ------------------------------------------- END POSTGRES SECTION -------------------------------------------

## --------------------------------------------- NIFI SECTION ---------------------------------------------
  nifi:
#    cap_add:
#      - NET_ADMIN # low port bindings
    container_name: nifi
    build: ./nifi
    image: cstone157/nifi
#    image: apache/nifi:1.25.0
    ports:
      - "3002:8080/tcp" # HTTP interface
      - "3003:8443/tcp" # HTTPS interface
      - "514:514/tcp"   # Syslog
      - "514:514/udp"   # Syslog
      - "2055:2055/udp" # NetFlow
    environment:
      NIFI_WEB_HTTP_PORT: 8443
    networks:
      - business-intelligence-net
    volumes:
      - ./nifi/nifi_state:/opt/nifi/nifi-current/state
      - ./nifi/nifi_db:/opt/nifi/nifi-current/database_repository
      - ./nifi/nifi_flowfile:/opt/nifi/nifi-current/flowfile_repository
      - ./nifi/nifi_content:/opt/nifi/nifi-current/content_repository
      - ./nifi/nifi_provenance:/opt/nifi/nifi-current/provenance_repository  
#      - ./nifi/drivers:/opt/nifi/nifi-current/drivers
#      - ./nifi/certs:/opt/certs
      - ./nifi/conf:/opt/nifi/nifi-current/conf
    restart: unless-stopped
## ------------------------------------------- END NIFI SECTION -------------------------------------------


## ------------------------------------------ GENERATOR SECTION ------------------------------------------
  ## Random process event Generators
  shoc_process_gen_01:
    container_name: shoc_process_gen_01
    build: ./generators/udp/process/
    image: cstone157/shoc_process_gen_01
    restart: always
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    environment:
      - UDP_LISTENER_PORT=41000
    networks:
      - business-intelligence-net
  shoc_process_gen_02:
    container_name: shoc_process_gen_02
    #build: ./generators/udp/process/
    image: cstone157/shoc_process_gen_01
    restart: always
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    environment:
      - UDP_LISTENER_PORT=41001
      - CONFIG_FILE_PATH=/app/config/config.json
    volumes:
      - ./generators/udp/process02:/app/config
    networks:
      - business-intelligence-net
  shoc_process_gen_03:
    container_name: shoc_process_gen_03
    #build: ./generators/udp/process/
    image: cstone157/shoc_process_gen_01
    restart: always
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    environment:
      - UDP_LISTENER_PORT=41002
      - CONFIG_FILE_PATH=/app/config/config.json
    volumes:
      - ./generators/udp/process03:/app/config
    networks:
      - business-intelligence-net
## ---------------------------------------- END GENERATOR SECTION ----------------------------------------
